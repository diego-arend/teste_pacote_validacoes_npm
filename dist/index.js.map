{"version":3,"file":"index.js","sources":["../src/files/documents.ts"],"sourcesContent":["export const isValidCPF = (value: string) => {\r\n  // Validar se é String\r\n  if (typeof value !== \"string\") {\r\n    return false;\r\n  }\r\n\r\n  // Tirar formatação\r\n  value = value.replace(/[^\\d]+/g, \"\");\r\n\r\n  // Validar se tem tamanho 11 ou se é uma sequência de digitos repetidos\r\n  if (value.length !== 11 || !!value.match(/(\\d)\\1{10}/)) return false;\r\n\r\n  // String para Array\r\n  const values = value.split(\"\");\r\n\r\n  const validator = values\r\n    // Pegar os últimos 2 digitos de validação\r\n    .filter((digit, index, array) => index >= array.length - 2 && digit)\r\n    // Transformar digitos em números\r\n    .map((el) => +el);\r\n\r\n  const toValidate = (pop: number) =>\r\n    values\r\n      // Pegar Array de items para validar\r\n      .filter((digit, index, array) => index < array.length - pop && digit)\r\n      // Transformar digitos em números\r\n      .map((el) => +el);\r\n\r\n  const rest = (count: number, pop: number) =>\r\n    ((toValidate(pop)\r\n      // Calcular Soma dos digitos e multiplicar por 10\r\n      .reduce((soma, el, i) => soma + el * (count - i), 0) *\r\n      10) %\r\n      // Pegar o resto por 11\r\n      11) %\r\n    // transformar de 10 para 0\r\n    10;\r\n\r\n  if (!(rest(10, 2) !== validator[0] || rest(11, 1) !== validator[1])) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n"],"names":[],"mappings":";;;;AAAO,IAAM,UAAU,GAAG,UAAC,KAAa,EAAA;;AAEtC,IAAA,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AAC7B,QAAA,OAAO,KAAK,CAAC;AACd,KAAA;;IAGD,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;;AAGrC,IAAA,IAAI,KAAK,CAAC,MAAM,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC;AAAE,QAAA,OAAO,KAAK,CAAC;;IAGrE,IAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAE/B,IAAM,SAAS,GAAG,MAAM;;SAErB,MAAM,CAAC,UAAC,KAAK,EAAE,KAAK,EAAE,KAAK,IAAK,OAAA,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAA,EAAA,CAAC;;SAEnE,GAAG,CAAC,UAAC,EAAE,EAAK,EAAA,OAAA,CAAC,EAAE,CAAA,EAAA,CAAC,CAAC;IAEpB,IAAM,UAAU,GAAG,UAAC,GAAW,EAAA;AAC7B,QAAA,OAAA,MAAM;;aAEH,MAAM,CAAC,UAAC,KAAK,EAAE,KAAK,EAAE,KAAK,IAAK,OAAA,KAAK,GAAG,KAAK,CAAC,MAAM,GAAG,GAAG,IAAI,KAAK,CAAA,EAAA,CAAC;;aAEpE,GAAG,CAAC,UAAC,EAAE,EAAA,EAAK,OAAA,CAAC,EAAE,CAAH,EAAG,CAAC,CAAA;AAJnB,KAImB,CAAC;AAEtB,IAAA,IAAM,IAAI,GAAG,UAAC,KAAa,EAAE,GAAW,EAAA;AACtC,QAAA,OAAA,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC;;aAEd,MAAM,CAAC,UAAC,IAAI,EAAE,EAAE,EAAE,CAAC,EAAK,EAAA,OAAA,IAAI,GAAG,EAAE,IAAI,KAAK,GAAG,CAAC,CAAC,CAAvB,EAAuB,EAAE,CAAC,CAAC;AACpD,YAAA,EAAE;;AAEF,YAAA,EAAE;;YAEJ,EAAE,CAAA;AAPF,KAOE,CAAC;IAEL,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;AACnE,QAAA,OAAO,IAAI,CAAC;AACb,KAAA;AAAM,SAAA;AACL,QAAA,OAAO,KAAK,CAAC;AACd,KAAA;AACH;;;;"}